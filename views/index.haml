.row-fluid
  .span4
    #view_accordion.accordion
      .accordion-group
        .accordion-heading
          %a.accordion-toggle#accordionAbout{"data-parent" => "#view_accordion", "data-toggle" => "collapse", :href => "#viewAbout"}
            What is this?
        .accordion-body.collapse{:id => "viewAbout"}
          .accordion-inner
            %p 2nd City Zoning is an interactive map that lets you:
            %ul
              %li
                find out
                %strong how your building is zoned
              %li
                learn
                %strong where to locate your business
              %li
                explore
                %strong zoning patterns
                throughout the city

            %p
              To make Chicago's zoning code digestible by humans,
              we took inspiration from one of our favorite games:
              = succeed '.' do
                = link_to "Sim City 2000", "http://en.wikipedia.org/wiki/SimCity_2000"
            %p
              It started with the color scheme:
              %strong{:style => 'color: #7DD67D;'} green
              for residential,
              %strong{:style => 'color: #7474D7;'} blue
              for commercial and
              %strong{:style => 'color: #DCDC7F;'} yellow
              for industrial. (This oversimplifies things a bit, 
              = succeed '.)' do
                %a{ :href => '/about#zoning-categories' } read the full story
            %p
              From there we got a little carried away. Graphics, sounds, music, oh my.
            %p
              We had a lot of fun making this, so dive in and explore!

            %p.pull-right
              %a#closeAbout.btn.btn-primary.btn-small{:href => "#"} Ok, thanks!
              %a.btn.btn-small{:href => "/about"} Read more &raquo;



    .well
      %h5
        Find zone
        <small>(<a id='findMe' href='#'>find me</a>)</small>

      %input#txtSearchAddress.input-block-level{:placeholder => "Enter an address or an intersection", :type => "text"}

      %input#btnSearch.btn.btn-primary{:type => "button", :value => "Search"}
      %button#reset.btn Reset

    .well.hidden-phone
      %h5
        Zoning type
        <small>(<a href='/zones'>huh?</a>)</small>
      %ul.inputs-list.unstyled.zones
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/residential.png' /> Residential (R)", :"data-content" => "Houses and apartment buildings. No stores, offices, or factories are allowed. Schools, churches, police stations and the like are ok, though." }
            %input#cbZone4{:type => "checkbox"}
            %img{:src => '/images/icons/residential.png', :alt=> 'Residential'}
            Residential
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/commercial.png' /> Commercial (C,B,DX,DC,DS)", :"data-content" => "From bodegas to big boxes, these districts are for stores and offices. Above-ground floor apartments are usually allowed. Includes Business (B), Commercial (C) and most Downtown (D) districts." }
            %input#cbZone1{:type => "checkbox"}
            %img{:src => '/images/icons/commercial.png', :alt=> 'Commercial'}
            Commercial
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/industrial.png' /> Industrial (M)", :"data-content" => "Factories, warehouses, freight, junkyards. All the heavy duty stuff in Chicago's industrial corridors, as well as fourteen special Planned Manufacturing Districts (PMD)." }
            %input#cbZone3{:type => "checkbox"}
            %img{:src => '/images/icons/industrial.png', :alt=> 'Industrial'}
            Industrial

      %h5
        Special Purpose Districts
      %ul.inputs-list.unstyled.zones
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/government.png' /> Planned Development (PD)", :"data-content" => "Tall buildings, hospital campuses, and other large developments that must be negotiated with city planners." }
            %input#cbZone5{:type => "checkbox"}
            %img{:src => '/images/icons/government.png', :alt=> 'Planned Development'}
            Planned Development
        %li
          %label.checkbox.inline#transit-zone{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/trains.png' /> Transportation (T)", :"data-content" => "Bits of land designed to protect roads, bus ways, bike trails, and rail lines." }
            %input#cbZone11{:type => "checkbox"}
            %img{:src => '/images/icons/trains.png', :alt=> 'Transportation'}
            Transportation
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "<img src='/images/icons/parks-entertainment.png' /> Parks and Open Space (POS)", :"data-content" => "Protected land set side for public parks, open space, beaches, and cemeteries." }
            %input#cbZone12{:type => "checkbox"}
            %img{:src => '/images/icons/parks-entertainment.png', :alt=> 'Parks and Open Space'}
            Parks and Open Space

    .well.hidden-phone
      #jquery_jplayer
      / Using the cssSelectorAncestor option with the default cssSelector class names to enable control association of standard functions using built in features
      #jp_container
        %h5
          Music
          %small
            %a.jp-play{:href => "#"}
              %i.icon-play

            %a.jp-pause{:href => "#"}
              %i.icon-pause

            %a.jp-stop{:href => "#"}
              %i.icon-stop

            %span.pull-right
              %a{:href => '/about#dear-maxis'} disclaimer
        %ul#jplayer-tracks.nav.nav-pills
          %li
            %a.track.track-default{:href => "https://s3.amazonaws.com/second-city-zoning/Sim+City+2000+-+Theme.mp3"} Sim City Theme
          %li
            %a.track{:href => "https://s3.amazonaws.com/second-city-zoning/SimCity+2000+-+MoogyCit.mp3"} MoogyCit
          %li
            %a.track{:href => "https://s3.amazonaws.com/second-city-zoning/SimCity+2000+-+City+Shimmy.mp3"} City Shimmy

  .span8
    #mapCanvas
    %span.pull-right
      An
      %a.yay-link{:href => "http://opencityapps.org"} Open City
      app by
      = succeed ',' do
        %a.yay-link{:href => "http://derekeder.com"} Derek Eder
      and
      %a{:href => "https://jpvelez.contently.com"} Juan-Pablo Velez

      %a.simcopter{:href => "#"} .


%audio#reticulating-splines{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/reticulating+splines.mp3'}
%audio#explosion{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/explosion.mp3'}
%audio#mouse-click{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/click.mp3'}
%audio#yay{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/yay.mp3'}
%audio#simcopter-one{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/simcopter one.mp3'}
/%audio#zzt{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/zzt.mp3'}
/%audio#train{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/train.mp3'}

- content_for :stylesheets do
  = include_stylesheet "http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css"  

- content_for :javascripts do
  :javascript
    var ZoningDict = ["Business", "Commercial / Mixed-Use", "Manufacturing", "Residential", 
                      "Planned Development", "Planned Manufacturing District", "Downtown Mixed-Use",
                      "Downtown Core", "Downtown Residential", "Downtown Service", 
                      "Transportation","Parks and Open Space"];

  = include_javascript :"jquery.address.min"
  = include_javascript :"http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places"
  = include_javascript :"http://libs.cartocdn.com/cartodb.js/v3/cartodb.js"
  = include_javascript :"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"
  / %script{:src => "/javascripts/fusiontips.js?2", :type => "text/javascript"}
  / %script{:src => "/javascripts/maps_lib.js?3", :type => "text/javascript"}
  %script{:src => "/javascripts/cartodb_lib.js", :type => "text/javascript"}
  = include_javascript :"bootstrap-popover"
  = include_javascript :"bootstrap-modal"
  = include_javascript :"jquery.cookie"
  = include_javascript :"jquery.jplayer.min"

  :javascript
    $(window).resize(function () {
      var h = $(window).height(),
        offsetTop = 120; // Calculate the top offset

      $('#mapCanvas').css('height', (h - offsetTop));
    }).resize();

    $(function() {
      $('label.checkbox.inline').popover(
        {
            delay: { show: 300, hide: 100 }
        });

      CartoDbLib.initialize();
      $(':checkbox').click(function(){
        play_multi_sound("mouse-click");
        MapsLib.doSearch();
      });

      $('#btnSearch').click(function(){
        play_multi_sound("reticulating-splines");
        MapsLib.doSearch();
      });

      $('#findMe').click(function(){
        play_multi_sound("reticulating-splines");
        MapsLib.findMe();
        return false;
      });

      $('#reset').click(function(){
        play_multi_sound("explosion");
        $.address.parameter('address','');
        $.address.parameter('radius','');
        MapsLib.initialize();
        return false;
      });

      $("#txtSearchAddress").keydown(function(e){
          var key =  e.keyCode ? e.keyCode : e.which;
          if(key == 13) {
              $('#btnSearch').click();
              return false;
          }
      });

      $('.simcopter').click(function(e){
        console.log('simcopter!');
        play_multi_sound("simcopter-one");
        return false;
      });

      $('.yay-link').click(function(e){
        var location = $(this).attr('href');
        play_multi_sound("yay");
        setTimeout(
          function(){
            window.location = location;
          },3000)
        e.preventDefault();
      });

      //$('#welcome-modal').modal('show');
      if ($.cookie("show-welcome") != "read") {
        $('#accordionAbout').click();
        $.cookie("show-welcome", "read", { expires: 7 });
      }

      $('#closeAbout').click(function(){
        $('#accordionAbout').click();
      });

      //---------music player---------------
      // Local copy of jQuery selectors, for performance.
      var my_jPlayer = $("#jquery_jplayer"),
        my_trackName = $("#jp_container .track-name"),
        my_playState = $("#jp_container .play-state")

      // Some options
      var opt_play_first = false, // If true, will attempt to auto-play the default track on page loads. No effect on mobile devices, like iOS.
        opt_auto_play = true // If true, when a track is selected, it will auto-play.

      // A flag to capture the first track
      var first_track = true;

      // Instance jPlayer
      my_jPlayer.jPlayer({
        ready: function () {
          $("#jp_container .track-default").click();
        },
        swfPath: "javascripts",
        cssSelectorAncestor: "#jp_container",
        supplied: "mp3",
        wmode: "window",
        loop: true
      });

      // Create click handlers for the different tracks
      $("#jp_container .track").click(function(e) {
        $('#jplayer-tracks').children('li').attr('class', '');
        $(this).parent().attr('class', 'active');
        my_jPlayer.jPlayer("setMedia", {
          mp3: $(this).attr("href")
        });
        if((opt_play_first && first_track) || (opt_auto_play && !first_track)) {
          my_jPlayer.jPlayer("play");
        }
        first_track = false;
        $(this).blur();
        return false;
      });

      //-----------handle multi-channel audio-----------------
      var channel_max = 10;                   // number of channels
      var audiochannels = new Array();
      for (a=0;a<channel_max;a++) {                 // prepare the channels
        audiochannels[a] = new Array();
        audiochannels[a]['channel'] = new Audio();            // create a new audio object
        audiochannels[a]['finished'] = -1;              // expected end time for this channel
      }
      function play_multi_sound(s) {
        for (a=0;a<audiochannels.length;a++) {
          thistime = new Date();
          if (audiochannels[a]['finished'] < thistime.getTime()) {      // is this channel finished?
            audiochannels[a]['finished'] = thistime.getTime() + document.getElementById(s).duration*1000;
            audiochannels[a]['channel'].src = document.getElementById(s).src;
            audiochannels[a]['channel'].load();
            audiochannels[a]['channel'].play();
            break;
          }
        }
      }

    });